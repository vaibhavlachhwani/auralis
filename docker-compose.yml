# This Docker Compose file orchestrates the Auralis application stack,
# including the database, backend, and frontend services.

services:
  # 1. TimescaleDB Database Service
  # This service runs a PostgreSQL database with the TimescaleDB extension.
  db:
    image: timescale/timescaledb-ha:pg17
    container_name: auralis-db
    environment:
      # Mimicking the successful docker run command
      PGDATA: /data/pgdata
      POSTGRES_PASSWORD: password
    ports:
      # Exposes the database on the host machine for direct access if needed.
      - "5432:5432"
    volumes:
      # Persists database data on the host machine in a local directory.
      - ./timescaledb-data:/data
    networks:
      - auralis-net
    healthcheck:
      # Ensures the backend waits until the database is actually ready to accept connections.
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. Spring Boot Backend Service
  # This service collects, processes, and serves the network data.
  backend:
    build:
      context: ./packet-collector-service
      dockerfile: Dockerfile
    container_name: auralis-backend
    depends_on:
      db:
        # This condition ensures the backend only starts after the database has passed its healthcheck.
        condition: service_healthy
    environment:
      # Overrides the database URL to point to the 'db' service container.
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      # Exposes the backend API and WebSocket on the host machine.
      - "8080:8080"
    networks:
      - auralis-net

  # 3. React Frontend Service
  # This service provides the user interface for Auralis.
  frontend:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: auralis-frontend
    depends_on:
      - backend
    ports:
      # Exposes the dashboard on a standard web development port on the host.
      - "5173:80"
    networks:
      - auralis-net

# Defines the custom network for inter-service communication.
networks:
  auralis-net:
    driver: bridge
